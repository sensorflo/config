# Intended to be included by .gitconfig. Possible content of .gitconfig:
# --------------------------------------------------
# [user]
# 	name = sensorflo
# 	email = sensorflo@gmail.com
# [credential]
#   username = sensorflo
# [include]
#   path = .gitconfig_sensorflo
# --------------------------------------------------

[core]
	editor = emacs -nw
[credential]
	helper = cache --timeout=3600
[branch]
	autosetuprebase = always
[color]
	ui = true
[merge]
	conflictstyle = diff3
	tool = meld
[mergetool "meld"]
	cmd = mergetool-wrapper meld-wrapper "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
	trustExitCode = false
	prompt = false
	keepBackup = false
	writeToTemp = true
[diff]
	algorithm = patience
	tool = meld
	ignoreSubmodules = none
[difftool "meld"]
	cmd = meld "$LOCAL" "$REMOTE"
	prompt = false
[status]
	submoduleSummary = true
[pull]
	rebase = true
[alias]
	# misc
	a      = add
	b      = branch
	ba     = branch -vva # mine
	c      = checkout
	co     = checkout		 # mine
	cob    = checkout -b # mine
	d      = diff
	f      = fetch --prune
	k      = cherry-pick
	l      = log --pretty=oneline --abbrev-commit
	n      = commit --verbose --amend
	r      = remote
	s      = commit --dry-run --short
	t      = diff --cached
	m      = merge				 # mine
	ma     = merge --abort # mine
	mt     = mergetool		 # mine
	st     = status				 # mine

	# the staging area
	a      = add
	aa     = add --update # (mnemonic: "add all")
	stage  = add
	ap     = add --patch
	p      = diff --cached # (mnemonic: "patch")
	ps     = diff --cached --stat # (mnemonic: "patch stat")
	unstage= reset HEAD

	# commits and commit history
	ci     = commit --verbose # commit aka _c_heck_i_n
	cim    = commit --verbose -m
	cia    = commit --verbose --all    # mine
	ciam   = commit --verbose --all -m # mine
	amend  = commit --verbose --amend
	n      = commit --verbose --amend
	k      = cherry-pick
	cp     = cherry-pick # mine
	cpa    = cherry-pick --abort # mine
	cpc    = cherry-pick --continue # mine
	cpq    = cherry-pick --quit # mine
	re     = rebase --interactive
	rb     = rebase               # mine
	rbi    = rebase --interactive # mine
	rba    = rebase --abort				# mine
	rbc    = rebase --continue		# mine
	pop    = reset --soft HEAD^
	peek   = log -p --max-count=1

	# fetching and pulling and pushing
	f      = fetch
	pm     = pull # (mnemonic: "pull merge")
	pr     = pull --rebase # (mnemonic: "pull rebase")
	p      = push

	# submodules
	sm     = submodule
	smi    = submodule init
	smst   = submodule status
	smsu   = submodule summary
	smu    = submodule update

	# misc 2
	d      = diff
	ds     = diff --stat #(mnemonic: "diff stat")
	hard   = reset --hard
	soft   = reset --soft
	scrap  = checkout HEAD


[push]
	default = simple
